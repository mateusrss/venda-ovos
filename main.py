import streamlit as st
import pandas as pd
import copy

# ==== CONFIG ====
st.set_page_config(page_title="App Silv√©rio", layout="centered")
st.title("App Silv√©rio üç´")

# ==== CREDENCIAIS ====
USER = "Paraiso"
PASSWORD = "12345"

def check_credentials(username, password):
    return username == USER and password == PASSWORD

# ==== DADOS FIXOS ====
itens_atuais = {
    "OVO FERRERO GRAN ROCHER 365G": {"normal": 70.66, "avariado": 59.10},
    "OVO FERRERO COLLECTION 241G": {"normal": 55.16, "avariado": 46.13},
    "OVO FERRERO ROCHER CAIXA 137,5G": {"normal": 35.09, "avariado": 29.35},
    "OVO KINDER MAXI SURPRESAS DOS DINOS 150G": {"normal": 51.24, "avariado": 41.38},
    "OVO KINDER MAXI SURPRESAS DAS FADAS 150G": {"normal": 51.24, "avariado": 41.38},
    "OVO FERRERO ROCHER DARK CAIXA 137,5G": {"normal": 35.09, "avariado": 29.35},
    "OVO FERRERO ROCHER 225G": {"normal": 55.16, "avariado": 46.13}
}

# ==== INICIALIZAR SESSION_STATE ====
st.session_state['itens'] = copy.deepcopy(itens_atuais)

# ==== LOGIN ====
if 'authenticated' not in st.session_state:
    st.session_state['authenticated'] = False

if not st.session_state['authenticated']:
    username = st.text_input("Usu√°rio:")
    password = st.text_input("Senha:", type='password')

    if st.button("Entrar"):
        if check_credentials(username, password):
            st.session_state['authenticated'] = True
            st.success("Login bem-sucedido!")
            st.balloons()
        else:
            st.error("Nome de usu√°rio ou senha incorretos.")
else:
    # ==== MENU LATERAL ====
    menu = st.sidebar.radio("Menu", ["üìã Registrar Venda", "‚öôÔ∏è Administrar Pre√ßos", "üîÑ Resetar Pre√ßos", "üö™ Logout"])

    itens = st.session_state['itens']

    # ==== REGISTRAR VENDA ====
    if menu == "üìã Registrar Venda":
        st.title("üìã Registrar Venda")
        with st.form("form_venda"):
            funcionario = st.text_input("Cliente / Funcionario:")
            data = st.date_input("Data da venda:")
            venda = st.selectbox("Selecione a mercadoria:", list(itens.keys()))
            tipo = st.radio("Tipo do produto:", options=["normal", "avariado"], horizontal=True)
            quantidade = st.number_input("Quantidade:", min_value=1, step=1)
            submit = st.form_submit_button("Registrar Venda")

        if submit:
            preco_unitario = itens[venda][tipo]
            total = preco_unitario * quantidade

            st.markdown(f"üí∞ Pre√ßo unit√°rio ({tipo}): R$ {preco_unitario:.2f}")
            st.markdown(f"### üßæ Total da venda: R$ {total:.2f}")

            nome_arquivo = 'vendas_ovos.xlsx'
            try:
                df = pd.read_excel(nome_arquivo)
            except FileNotFoundError:
                df = pd.DataFrame(columns=[
                    'Data', 'Funcion√°rio', 'Mercadoria', 'Tipo',
                    'Quantidade', 'Pre√ßo Unit√°rio', 'Total'
                ])

            nova_venda = pd.DataFrame({
                'Data': [data.strftime("%d/%m/%Y")],
                'Funcion√°rio': [funcionario],
                'Mercadoria': [venda],
                'Tipo': [tipo],
                'Quantidade': [quantidade],
                'Pre√ßo Unit√°rio': [preco_unitario],
                'Total': [total]
            })

            df = pd.concat([df, nova_venda], ignore_index=True)
            df.to_excel(nome_arquivo, index=False)

            st.success("‚úÖ Venda registrada com sucesso!")
            st.balloons()

        # Mostrar vendas registradas
        st.markdown("## üìä Vendas Registradas")
        try:
            df = pd.read_excel("vendas_ovos.xlsx")
            st.dataframe(df)
        except:
            st.warning("Nenhuma venda registrada ainda.")

    # ==== ADMINISTRAR PRE√áOS ====
    elif menu == "‚öôÔ∏è Administrar Pre√ßos":
        st.title("‚öôÔ∏è Administra√ß√£o de Pre√ßos")
        produto = st.selectbox("Selecione o produto:", list(itens.keys()))
        
        preco_normal = st.number_input("Pre√ßo Normal", value=itens[produto]["normal"], format="%.2f")
        preco_avariado = st.number_input("Pre√ßo Avariado", value=itens[produto]["avariado"], format="%.2f")

        if st.button("Salvar Pre√ßos"):
            itens[produto]["normal"] = preco_normal
            itens[produto]["avariado"] = preco_avariado
            st.success(f"Pre√ßos atualizados para: {produto}")
            st.session_state['itens'] = itens

        st.markdown("### üßæ Tabela Atual de Pre√ßos")
        st.dataframe(pd.DataFrame(itens).T.rename(columns={"normal": "Normal (R$)", "avariado": "Avariado (R$)"}))

    # ==== RESETAR PRE√áOS ====
    elif menu == "üîÑ Resetar Pre√ßos":
        st.session_state['itens'] = itens_atuais.copy()
        st.success("Pre√ßos restaurados com sucesso!")
        st.experimental_rerun()

    # ==== LOGOUT ====
    elif menu == "üö™ Logout":
        st.session_state['authenticated'] = False
        st.success("Voc√™ foi desconectado.")
        st.balloons()
